{"version":3,"file":"ProjectList-cf5ac468.js","sources":["../../src/pages/projects/ProjectListItems.tsx","../../src/pages/projects/ProjectList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useProjectsState } from \"../../context/projects/context\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ProjectListItems() {\n  let state: any = useProjectsState();\n  const {t} = useTranslation()\n  const { projects, isLoading, isError, errorMessage } = state\n  // console.log(projects);\n\n  // If `isLoading` is true, and there are no projects, in that case,\n  // I'll show a loading text\n  if (projects.length === 0 && isLoading) {\n    return <span>{t('loading')}</span>;\n  }\n\n  // if (projects.length === 0) {\n  //  throw Error(\"Error!!! Projects are not created Yet.\");\n  //}\n\n// Next, if there is an error, I'll show the error message.\n  if (isError) {\n    return <span>{errorMessage}</span>;\n  }\n\n  // And finally I'll iterate over the projects object to show the\n  // individual projects card.\n  return (\n    <>\n      {projects.map((project: any) => (\n        <Link\n        key={`${project.id}-${project.name}`}\n        to={`${project.id}`}\n        className=\"block p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\"\n      >\n        <h5 className=\"mb-2 text-xl font-medium tracking-tight text-gray-900 dark:text-white\">\n          {project.name}\n        </h5>\n      </Link>\n      ))}\n    </>\n  );\n}\n","import React from 'react';\nimport ProjectListItems from './ProjectListItems';\n\nconst ProjectList: React.FC = () => {\n  return (\n    <div className=\"grid gap-4 grid-cols-4 mt-5\">\n      <ProjectListItems />\n    </div>\n  );\n};\nexport default ProjectList;\n"],"names":["ProjectListItems","state","useProjectsState","useTranslation","projects","isLoading","isError","errorMessage","jsx","Fragment","project","Link","ProjectList"],"mappings":"oXAIA,SAAwBA,GAAmB,CACzC,IAAIC,EAAaC,IACX,KAAA,CAAC,GAAKC,IACN,CAAE,SAAAC,EAAU,UAAAC,EAAW,QAAAC,EAAS,aAAAC,GAAiBN,EAKnD,OAAAG,EAAS,SAAW,GAAKC,EACnBG,EAAAA,IAAA,OAAA,CAAM,SAAE,EAAA,SAAS,CAAE,CAAA,EAQzBF,EACKE,EAAA,IAAC,QAAM,SAAaD,CAAA,CAAA,EAOxBC,EAAAA,IAAAC,EAAAA,SAAA,CAAA,SAAAL,EAAS,IAAKM,GACbF,EAAA,IAACG,EAAA,CAED,GAAI,GAAGD,EAAQ,KACf,UAAU,6IAEV,SAACF,EAAAA,IAAA,KAAA,CAAG,UAAU,wEACX,WAAQ,KACX,CAAA,EANK,GAAGE,EAAQ,MAAMA,EAAQ,MAQ/B,CAAA,CACH,CAAA,CAEJ,CCvCA,MAAME,EAAwB,UAEzB,MAAI,CAAA,UAAU,8BACb,SAAAJ,EAAAA,IAACR,IAAiB,CACpB,CAAA"}